name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed  # Trigger on pull request closed events (merged)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        id: docker_build
        uses: ./.github/workflows/build-docker-image.yml
        with:
          folder: ClientAdvisor/App  # Specify the folder directly
          registry: pslpricicdcontainerreg.azurecr.io  # Set your Docker registry
          username: pslpricicdcontainerreg  # Set your Docker username
          push: true  # Set to true to push the image
          app_name: byc-wa-app  # Specify the app name
          dockerfile: ClientAdvisor/App/WebApp.Dockerfile  # Specify the Dockerfile path

      - name: Notify Slack (Build)
        if: always()
        run: |
          STATUS=$(if [[ ${{ job.status }} == 'success' ]]; then echo "SUCCESS"; else echo "FAILURE"; fi)
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Docker image build finished with status: $STATUS\"}" ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Docker Image
        run: |
          echo "Deploying Docker image..."
          IMAGE_NAME="${{ steps.docker_build.outputs.image_name }}"  # Capture the image name from the build step
          docker pull $IMAGE_NAME
          docker run -d --rm --name app-container $IMAGE_NAME  # Replace with your actual deployment command

      - name: Notify Slack (Deploy)
        if: always()
        run: |
          STATUS=$(if [[ ${{ job.status }} == 'success' ]]; then echo "SUCCESS"; else echo "FAILURE"; fi)
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Deployment finished with status: $STATUS\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
